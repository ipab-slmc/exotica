extend <exotica/PlanningProblem>
Required int T;
Required double Tau;
Optional double Wrate = 1.0;
Optional Eigen::VectorXd W = Eigen::VectorXd();
Optional std::vector<exotica::Initializer> Cost = std::vector<exotica::Initializer>();
Optional std::vector<exotica::Initializer> Inequality = std::vector<exotica::Initializer>();
Optional std::vector<exotica::Initializer> Equality = std::vector<exotica::Initializer>();
Optional Eigen::VectorXd LowerBound = Eigen::VectorXd();
Optional Eigen::VectorXd UpperBound = Eigen::VectorXd();
Optional bool UseBounds = true;
Optional double InequalityFeasibilityTolerance = 1e-12;
Optional double EqualityFeasibilityTolerance = 1e-6;
